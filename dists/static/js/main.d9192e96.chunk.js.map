{"version":3,"sources":["components/auth/SignIn.js","store/actions/authActions.js","components/auth/SignUp.js","components/projects/ListSummary.js","components/projects/ListDisplay.js","components/dashboard/Dashboard.js","components/layout/SignedInLinks.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/projects/CreateList.js","store/actions/listActions.js","components/projects/ProjectDetails.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/listReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["SignIn","state","email","password","handleChange","e","setState","target","id","value","handleSubmit","preventDefault","props","signIn","this","authError","auth","uid","to","className","Form","onSubmit","Label","htmlFor","Input","type","onChange","placeholder","Button","Component","connect","authErr","firebase","dispatch","creds","credentials","getState","getFirebase","signInWithEmailAndPassword","then","catch","err","SignUp","firstName","lastName","signUp","newUser","getFirestore","firestore","createUserWithEmailAndPassword","resp","collection","doc","user","set","toString","initials","ListSummary","list","isDone","Card","CardBody","CardTitle","title","CardText","authorFirstName","authorLastName","CardFooter","moment","createdAt","toDate","calendar","lists","CardGroup","filter","authorId","map","key","Dashboard","compose","ordered","firestoreConnect","orderBy","signOut","Fragment","NavItem","onClick","class","profile","SignedOutLinks","Navbarn","isOpen","toggleNav","bind","Navbar","dark","expand","NavbarToggler","NavbarBrand","href","src","alt","Collapse","navbar","Nav","isLoaded","console","log","CreateList","message","createList","history","push","add","Date","ownProps","match","params","data","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","rootReducer","combineReducers","action","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","rrfProps","config","userProfile","useFirestoreForProfile","enableRedirectHandling","resetBeforeLogin","createFirestoreInstance","AuthIsLoaded","children","useSelector","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.d9192e96.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { Button, Form, Input, Label } from \"reactstrap\";\nimport { signIn } from \"../../store/actions/authActions\";\n\nclass SignIn extends Component {\n  state = {\n    email: \"\",\n    password: \"\",\n  };\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value,\n    });\n  };\n  handleSubmit = (e) => {\n    e.preventDefault();\n    //console.log(this.state);\n    this.props.signIn(this.state);\n  };\n  render() {\n    const { authError, auth } = this.props;\n    if (auth.uid) return <Redirect to=\"/\" />;\n    else\n      return (\n        <div className=\"container mt-5 col-md-6 offset-3  bg-white\">\n          <Form onSubmit={this.handleSubmit} className=\"bg-white mt-0 mx-0\">\n            <h5 className=\"text-grey text-center \">\n              {\" \"}\n              <u>Sign In</u>\n            </h5>\n            <div className=\"input-field col-md-6 offset-3\">\n              <Label htmlFor=\"email\">Email</Label>\n              <Input\n                type=\"email\"\n                id=\"email\"\n                onChange={this.handleChange}\n                placeholder=\"someone@example.com\"\n              />\n            </div>\n            <div className=\"input-field col-md-6 offset-3\">\n              <Label htmlFor=\"password\">Password</Label>\n              <Input\n                type=\"password\"\n                id=\"password\"\n                onChange={this.handleChange}\n                placeholder=\"Password\"\n              />\n            </div>\n            <div className=\"mt-2 offset-5\">\n              <Button className=\"btn btn-rounded lighten-1  z-depth-0\">\n                Login\n              </Button>\n              <div className=\"red-text center\">\n                {authError ? authError : \"\"}\n              </div>\n            </div>\n          </Form>\n        </div>\n      );\n  }\n}\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signIn: (creds) => dispatch(signIn(creds)),\n  };\n};\nconst mapStateToProps = (state) => {\n  return {\n    authError: state.auth.authErr,\n    auth: state.firebase.auth,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\n","export const signIn = (credentials) => {\n  return (dispatch, getState, { getFirebase }) => {\n    const firebase = getFirebase();\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(credentials.email, credentials.password)\n      .then(() => {\n        dispatch({ type: \"LOGIN_SUCCESS\" });\n      })\n      .catch((err) => {\n        dispatch({ type: \"LOGIN_ERROR\", err });\n      });\n  };\n};\n\nexport const signOut = () => {\n  return (dispatch, getState, { getFirebase }) => {\n    const fb = getFirebase();\n    fb.auth()\n      .signOut()\n      .then(() => {\n        dispatch({ type: \"SIGNOUT_SUCCESS\" });\n      })\n      .catch((err) => {\n        dispatch({ type: \"SIGNOUT_ERROR\", err });\n      });\n  };\n};\nexport const signUp = (newUser) => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    const firebase = getFirebase();\n    const firestore = getFirestore();\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(newUser.email, newUser.password)\n      .then((resp) => {\n        return firestore\n          .collection(\"users\")\n          .doc(resp.user.uid)\n          .set({\n            firstName: newUser.firstName.toString(),\n            lastName: newUser.lastName.toString(),\n            initials: newUser.firstName[0] + newUser.lastName[0],\n          });\n      })\n      .then(() => {\n        dispatch({ type: \"SIGNUP_SUCCESS\" });\n      })\n      .catch((err) => {\n        dispatch({ type: \"SIGNUP_ERROR\", err });\n      });\n  };\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { Button, Form, Input, Label } from \"reactstrap\";\nimport { signUp } from \"../../store/actions/authActions\";\n\nclass SignUp extends Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    firstName: \"\",\n    lastName: \"\",\n  };\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value,\n    });\n  };\n  handleSubmit = (e) => {\n    e.preventDefault();\n    //console.log(this.state);\n    this.props.signUp(this.state);\n  };\n  render() {\n    const { auth, authErr } = this.props;\n    if (auth.uid) return <Redirect to=\"/\" />;\n    else\n      return (\n        <div className=\"container\">\n          <Form onSubmit={this.handleSubmit} className=\"bg-white\">\n            <h4 className=\"text-center\">\n              <u>Sign Up</u>\n            </h4>\n            <div className=\"input-field col-md-6 offset-3\">\n              <Label htmlFor=\"email\">Email</Label>\n              <Input type=\"email\" id=\"email\" onChange={this.handleChange} />\n            </div>\n            <div className=\"input-field col-md-6 offset-3\">\n              <Label htmlFor=\"password\">Password</Label>\n              <Input\n                type=\"password\"\n                id=\"password\"\n                onChange={this.handleChange}\n              />\n            </div>\n            <div className=\"input-field col-md-6 offset-3\">\n              <Label htmlFor=\"firstName\">John</Label>\n              <Input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\n            </div>\n            <div className=\"input-field col-md-6 offset-3\">\n              <Label htmlFor=\"lastName\">Doe</Label>\n              <Input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\n            </div>\n            <div className=\"input-field\">\n              <Button className=\"button offset-5 mt-1\">SignUp</Button>\n            </div>\n            <div className=\"red-text center\">\n              {authErr ? <p>{authErr}</p> : null}\n            </div>\n          </Form>\n        </div>\n      );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth,\n    authErr: state.auth.authErr,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signUp: (newUser) => dispatch(signUp(newUser)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\n","import React from \"react\";\nimport moment from \"moment\";\nimport { Card, CardBody, CardFooter, CardText, CardTitle } from \"reactstrap\";\n\nconst ListSummary = ({ list }) => {\n  if (list.isDone)\n    return (\n      <Card className=\"card bg-success project-summary\" id=\"contextMenuId\">\n        <CardBody className=\"card-body text-light\">\n          <CardTitle className=\"card-title\">{list.title}</CardTitle>\n          <CardText>\n            By {list.authorFirstName} {list.authorLastName}\n          </CardText>\n          <CardFooter className=\"text-secondary\">\n            {\"--\"}\n            {moment(list.createdAt.toDate()).calendar()}\n          </CardFooter>\n        </CardBody>\n      </Card>\n    );\n  else {\n    return (\n      <Card className=\"card bg-info project-summary\" id=\"contextMenuId\">\n        <CardBody className=\"card-body text-light\">\n          <CardTitle className=\"card-title\">{list.title}</CardTitle>\n          <CardText>\n            By {list.authorFirstName} {list.authorLastName}\n          </CardText>\n          <CardFooter className=\"text-secondary\">\n            {\"--\"}\n            {moment(list.createdAt.toDate()).calendar()}\n          </CardFooter>\n        </CardBody>\n      </Card>\n    );\n  }\n};\n\nexport default ListSummary;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { CardGroup } from \"reactstrap\";\nimport ListSummary from \"./ListSummary\";\n\nconst ListDisplay = ({ lists, auth }) => {\n  return (\n    <CardGroup>\n      {lists &&\n        lists\n          .filter((list) => list.authorId === auth.uid)\n          .map((list) => {\n            return (\n              <Link to={\"/list/\" + list.id} key={list.id}>\n                {\" \"}\n                <div className=\"mx-auto mt-1 w-75 h-50\">\n                  <ListSummary list={list} />\n                </div>\n              </Link>\n            );\n          })}\n    </CardGroup>\n  );\n};\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth,\n  };\n};\nexport default connect(mapStateToProps)(ListDisplay);\n","import React, { Component } from \"react\";\nimport ListDisplay from \"../projects/ListDisplay\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\nimport { Redirect } from \"react-router-dom\";\n\nconst mapStateToProps = (state) => {\n  //console.log(state);\n  return {\n    lists: state.firestore.ordered.lists,\n    auth: state.firebase.auth,\n  };\n};\n\nclass Dashboard extends Component {\n  render() {\n    const { lists, auth } = this.props;\n    if (!auth.uid) return <Redirect to=\"/signin\" />;\n    return (\n      <div className=\"dashboard container\">\n        <div className=\"row\">\n          <div className=\"col col-sm-12 col-md-12\">\n            <ListDisplay lists={lists} />{\" \"}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([{ collection: \"lists\", orderBy: [\"createdAt\", \"desc\"] }])\n)(Dashboard);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { NavLink } from \"react-router-dom\";\nimport { Nav, NavItem } from \"reactstrap\";\nimport { signOut } from \"../../store/actions/authActions\";\n\nconst SignedInLinks = (props) => {\n  return (\n    <React.Fragment>\n      <NavItem>\n        <NavLink className=\"nav-link\" to=\"/\">\n          <span className=\"fa fa-home fa-lg\"></span> Home\n        </NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink className=\"nav-link\" to=\"/create\">\n          <span className=\"fa fa-plus-square fa-lg\"></span> New List\n        </NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink className=\"nav-link\" to=\"/\" onClick={props.signOut}>\n          <span\n            class=\"fa fa-sign-out fa-lg\n          \"\n          ></span>{\" \"}\n          Log Out\n        </NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink\n          className=\"nav-link\"\n          to=\"/\"\n          className=\"btn btn-primary rounded-circle float-right\"\n        >\n          {props.profile.initials}\n        </NavLink>\n      </NavItem>\n    </React.Fragment>\n  );\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signOut: () => dispatch(signOut()),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(SignedInLinks);\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { NavItem } from \"reactstrap\";\n\nconst SignedOutLinks = () => {\n  return (\n    <React.Fragment>\n      <NavItem>\n        <NavLink className=\"nav-link\" to=\"/signup\">\n          <i class=\"fa fa-sign-in fa-lg\"></i> Signup\n        </NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink className=\"nav-link\" to=\"/signin\">\n          <i class=\"fa fa-sign-in fa-lg\"></i> Login\n        </NavLink>\n      </NavItem>\n    </React.Fragment>\n  );\n};\nexport default SignedOutLinks;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport SignedInLinks from \"./SignedInLinks\";\nimport SignedOutLinks from \"./SignedOutLinks\";\nimport { connect } from \"react-redux\";\nimport { isLoaded } from \"react-redux-firebase\";\nimport { Collapse, Nav, Navbar, NavbarBrand, NavbarToggler } from \"reactstrap\";\n\nclass Navbarn extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false,\n    };\n    this.toggleNav = this.toggleNav.bind(this);\n  }\n  toggleNav() {\n    this.setState({\n      isOpen: !this.state.isOpen,\n    });\n  }\n  render() {\n    return (\n      <React.Fragment>\n        <Navbar dark expand=\"md\">\n          <div className=\"container\">\n            <NavbarToggler onClick={this.toggleNav} />\n            <NavbarBrand href=\"/\" className=\"mx-auto\">\n              {\" \"}\n              <img src=\"sa\" href=\"/\" alt=\"Lister\"></img>\n            </NavbarBrand>\n            <Collapse\n              navbar\n              isOpen={this.state.isOpen}\n              className=\"col col-md-6 float-right\"\n            >\n              <Nav navbar>\n                {isLoaded(this.props.auth) && this.props.auth.uid ? (\n                  <SignedInLinks profile={this.props.profile} />\n                ) : (\n                  <SignedOutLinks />\n                )}\n              </Nav>\n            </Collapse>\n          </div>\n        </Navbar>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  console.log(state);\n  return {\n    auth: state.firebase.auth,\n    profile: state.firebase.profile,\n  };\n};\n\nexport default connect(mapStateToProps)(Navbarn);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { Button, Form, Input, Label } from \"reactstrap\";\nimport { createList } from \"../../store/actions/listActions\";\n\nclass CreateList extends Component {\n  state = {\n    title: \"\",\n    message: \"\",\n    isDone: false,\n  };\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value,\n    });\n  };\n  handleSubmit = (e) => {\n    e.preventDefault();\n    //console.log(this.state);\n    this.props.createList(this.state);\n    this.props.history.push(\"/\");\n  };\n  render() {\n    const { auth } = this.props;\n    if (!auth.uid) return <Redirect to=\"signin\" />;\n    return (\n      <div className=\"container \">\n        <Form onSubmit={this.handleSubmit} className=\"white\">\n          <h4 className=\"text-secondary text-center\">New List</h4>\n          <div className=\"input-field col-md-6 offset-3\">\n            <Label htmlFor=\"title\">Title</Label>\n            <Input type=\"text\" id=\"title\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field col-md-6 offset-3\">\n            <Label htmlFor=\"message\">Message</Label>\n            <Input\n              type=\"textarea\"\n              id=\"message\"\n              className=\"textarea\"\n              onChange={this.handleChange}\n            />\n          </div>\n          <div className=\"input-field\">\n            <Button className=\"btn offset-5 mt-2\">Create List</Button>\n          </div>\n        </Form>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    createList: (list) => dispatch(createList(list)),\n  };\n};\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateList);\n","export const createList = (list) => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    //make async call to DB\n    const firestore = getFirestore();\n    const profile = getState().firebase.profile;\n    const authorId = getState().firebase.auth.uid;\n    firestore\n      .collection(\"lists\")\n      .add({\n        ...list,\n        authorFirstName: profile.firstName,\n        authorLastName: profile.lastName,\n        authorId: authorId,\n        createdAt: new Date(),\n      })\n      .then(() => {\n        dispatch({ type: \"CREATE_LIST\", list });\n      })\n      .catch((err) => {\n        dispatch({ type: \"CREATE_LIST_ERROR\", err });\n      });\n  };\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { Redirect } from \"react-router-dom\";\nimport moment from \"moment\";\nimport { Card, CardBody, CardFooter, CardText, CardTitle } from \"reactstrap\";\nconst ProjectDetails = (props) => {\n  const { list, auth } = props;\n  if (!auth.uid) return <Redirect to=\"/signin\" />;\n  if (list) {\n    return (\n      <Card className=\"w-75 mx-auto bg-info text-light \">\n        <CardBody className=\"card-body\">\n          <CardTitle className=\"text-center\">\n            {\" \"}\n            <h4>\n              <b>{list.title}</b>\n            </h4>\n          </CardTitle>\n          <CardText>{list.message}</CardText>\n        </CardBody>\n        <CardBody>\n          <CardFooter>Posted by {list.authorFirstName}</CardFooter>\n          <CardFooter>{moment(list.createdAt.toDate()).calendar()}</CardFooter>\n        </CardBody>\n      </Card>\n    );\n  } else {\n    return <div className=\"center grey-text\">Loading List...</div>;\n  }\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const id = ownProps.match.params.id;\n  const lists = state.firestore.data.lists;\n  const list = lists ? lists[id] : null;\n  return {\n    list: list,\n    auth: state.firebase.auth,\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([{ collection: \"lists\" }])\n)(ProjectDetails);\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport SignIn from \"./components/auth/SignIn\";\nimport SignUp from \"./components/auth/SignUp\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport Navbar from \"./components/layout/Navbar\";\nimport CreateList from \"./components/projects/CreateList\";\nimport ProjectDetails from \"./components/projects/ProjectDetails\";\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/\" component={Dashboard} />\n          <Route path=\"/list/:id\" component={ProjectDetails} />\n          <Route path=\"/signin\" component={SignIn} />\n          <Route path=\"/signup\" component={SignUp} />\n          <Route path=\"/create\" component={CreateList} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\n  authErr: null,\n};\nexport const authReducer = (state = initState, action) => {\n  switch (action.type) {\n    case \"LOGIN_ERROR\":\n      console.log(action.err + \"Login error\");\n      return { ...state, authErr: \"Login Failed!\" };\n    case \"LOGIN_SUCCESS\":\n      console.log(\"Success\");\n      return { ...state, authErr: null };\n    case \"SIGNOUT_SUCCESS\":\n      console.log(\"SignOut Success\");\n      return state;\n    case \"SIGNOUT_ERROR\":\n      console.log(\"Signout failed!\");\n      return { ...state, authErr: action.err };\n    case \"SIGNUP_SUCCESS\":\n      console.log(\"SignUp Success\");\n      return { ...state, authErr: null };\n    case \"SIGNUP_ERROR\":\n      console.log(\"SIgnUp Error\");\n      return {\n        ...state,\n        authErr: action.err.message,\n      };\n    default:\n      return state;\n  }\n};\n","const initState = {\n  list: [\n    { id: \"1\", title: \"Get Milk\", message: \"Get 2% milk from market\" },\n    {\n      id: \"2\",\n      title: \"Go to Park\",\n      message: \"Go to park to play with children\",\n    },\n    { id: \"3\", title: \"Fruits\", message: \"Buy Apple and Oranges\" },\n  ],\n};\nexport const listReducer = (state = initState, action) => {\n  switch (action.type) {\n    case \"CREATE_LIST\":\n      console.log(\"created list \", action.list);\n      return state;\n    case \"CREATE_LIST_ERROR\":\n      console.log(action.err);\n      return state;\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport { authReducer } from \"./authReducer\";\nimport { listReducer } from \"./listReducer\";\nimport { firestoreReducer } from \"redux-firestore\";\nimport { firebaseReducer } from \"react-redux-firebase\";\nexport const rootReducer = combineReducers({\n  auth: authReducer,\n  list: listReducer,\n  firestore: firestoreReducer,\n  firebase: firebaseReducer,\n});\n","import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nvar firebaseConfig = {\n  apiKey: \"AIzaSyDxZWADwqMmXAX0FXO55LlM4hF92BnKoUs\",\n  authDomain: \"lister-49423.firebaseapp.com\",\n  databaseURL: \"https://lister-49423.firebaseio.com\",\n  projectId: \"lister-49423\",\n  storageBucket: \"lister-49423.appspot.com\",\n  messagingSenderId: \"1069645442610\",\n  appId: \"1:1069645442610:web:1a343a68a3376c92d4d62b\",\n  measurementId: \"G-91MTGPLST6\",\n};\n\nfirebase.initializeApp(firebaseConfig);\nfirebase.firestore().settings({ timestampsInSnapshots: true });\n\nexport default firebase;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { applyMiddleware, compose, createStore } from \"redux\";\nimport { rootReducer } from \"./store/reducers/rootReducer\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport {\n  reduxFirestore,\n  getFirestore,\n  createFirestoreInstance,\n} from \"redux-firestore\";\nimport {\n  getFirebase,\n  ReactReduxFirebaseProvider,\n  isLoaded,\n} from \"react-redux-firebase\";\nimport fbConfig from \"./config/fbConfig\";\nimport firebase from \"firebase/app\";\nimport { useSelector } from \"react-redux\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"font-awesome/css/font-awesome.min.css\";\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reduxFirestore(fbConfig, firebase)\n  )\n);\nconst profileSpecificProps = {\n  userProfile: \"users\",\n\n  useFirestoreForProfile: true,\n\n  enableRedirectHandling: false,\n\n  resetBeforeLogin: false,\n};\nconst rrfProps = {\n  firebase,\n  config: fbConfig,\n  config: profileSpecificProps,\n  dispatch: store.dispatch,\n  createFirestoreInstance,\n};\n\nfunction AuthIsLoaded({ children }) {\n  const auth = useSelector((state) => state.firebase.auth);\n  if (!isLoaded(auth))\n    return (\n      <div className=\"center\">\n        {\" \"}\n        <p>Loading List...</p>\n      </div>\n    );\n  return children;\n}\n\nReactDOM.render(\n  <Provider store={store}>\n    <ReactReduxFirebaseProvider {...rrfProps}>\n      <AuthIsLoaded>\n        <App />\n      </AuthIsLoaded>\n    </ReactReduxFirebaseProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}